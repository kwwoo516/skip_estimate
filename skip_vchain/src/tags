!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALPAH	rusage.c	4;"	d	file:
CC	Makefile	/^CC=gcc$/;"	m
DEBUG_PRINT	sim.h	4;"	d
DEBUG_PRINT	sim.h	6;"	d
Entity	rusage.h	/^} Entity; $/;"	t	typeref:struct:__anon1
EntitySet	rusage.h	/^} EntitySet; $/;"	t	typeref:struct:__anon2
FALSE	skip.h	12;"	d
LDLIBS	Makefile	/^LDLIBS= -lpthread -lm -g$/;"	m
MAX_DATA	sim.h	22;"	d
MAX_KEY	sim.h	21;"	d
MAX_LEVEL	skip.h	1;"	d
MAX_OP_NUM	sim.h	23;"	d
MAX_THREAD_NUM	sim.h	19;"	d
NUMERIC	rusage.c	5;"	d	file:
Pthread_cond_broadcast	thread.h	/^void Pthread_cond_broadcast(pthread_cond_t *cv)$/;"	f
Pthread_cond_wait	thread.h	/^void Pthread_cond_wait(pthread_cond_t *cv,pthread_mutex_t *mutex)$/;"	f
Pthread_create	thread.h	/^void Pthread_create(pthread_t *thread, const pthread_attr_t *attr, 	$/;"	f
Pthread_join	thread.h	/^void Pthread_join(pthread_t thread, void **value_ptr)$/;"	f
Pthread_mutex_lock	thread.h	/^void Pthread_mutex_lock(pthread_mutex_t *mutex)$/;"	f
Pthread_mutex_trylock	thread.h	/^void Pthread_mutex_trylock(pthread_mutex_t *mutex)$/;"	f
Pthread_mutex_unlock	thread.h	/^void Pthread_mutex_unlock(pthread_mutex_t *mutex)$/;"	f
RUSAGE_RUSAGE_H	rusage.h	2;"	d
TRUE	skip.h	11;"	d
_GNU_SOURCE	sim.h	18;"	d
__MYTHREADS_h__	thread.h	2;"	d
_ret_t	sim.h	/^typedef struct _ret_t{$/;"	s
args_t	sim.h	/^} args_t;$/;"	t	typeref:struct:_ret_t
capacity	rusage.h	/^	size_t capacity; $/;"	m	struct:__anon2
chain_cnt	skip.h	/^	atomic_long chain_cnt;$/;"	m	struct:skip_list_t
cond	vcskip.c	/^pthread_cond_t cond = PTHREAD_COND_INITIALIZER;$/;"	v
curr	skip.h	/^	struct node_t * curr;$/;"	m	struct:skip_iter	typeref:struct:skip_iter::node_t
data	skip.h	/^	long data; \/\/latest data$/;"	m	struct:node_t
data	skip.h	/^	long data;$/;"	m	struct:skip_iter
data	skip.h	/^	long data;$/;"	m	struct:vcnode_t
do_query_get	main.c	/^void *do_query_get(void* arg)$/;"	f
do_query_put	main.c	/^void *do_query_put(void* arg)$/;"	f
do_query_range_query	main.c	/^void *do_query_range_query(void * arg)$/;"	f
entities	rusage.h	/^	Entity* entities; $/;"	m	struct:__anon2
fail_cnt	skip.h	/^int fail_cnt;$/;"	v
get_cnt	sim.h	/^atomic_long get_cnt = 0;$/;"	v
get_level	skip.h	/^static int get_level() {\/\/random하게 level을 설정$/;"	f
key	rusage.h	/^ 	char* key; $/;"	m	struct:__anon1
key	skip.h	/^	long key;$/;"	m	struct:node_t
key	skip.h	/^	long key;$/;"	m	struct:skip_iter
key	vcskip.c	/^char* key = "VmSize";$/;"	v
key_box	sim.h	/^int* key_box;$/;"	v
latency	sim.h	/^	int* latency;$/;"	m	struct:_ret_t
level	skip.h	/^	long level;$/;"	m	struct:node_t
level_count	cskip.c	/^int level_count[12];$/;"	v
level_count	opskip.c	/^int level_count[MAX_LEVEL];$/;"	v
level_count	vcskip.c	/^int level_count[12];$/;"	v
list_head	skip.h	/^	struct node_t* list_head;$/;"	m	struct:skip_list_t	typeref:struct:skip_list_t::node_t
list_lock	skip.h	/^	pthread_mutex_t list_lock;	$/;"	m	struct:skip_list_t
main	main.c	/^int main(int argc, char* argv[])$/;"	f
mutex	vcskip.c	/^pthread_mutex_t mutex =PTHREAD_MUTEX_INITIALIZER ;\/\/unused$/;"	v
next	skip.h	/^	struct node_t* next[MAX_LEVEL];$/;"	m	struct:node_t	typeref:struct:node_t::node_t
next	skip.h	/^	struct vcnode_t* next;$/;"	m	struct:vcnode_t	typeref:struct:vcnode_t::vcnode_t
node_cnt	skip.h	/^	atomic_long node_cnt;$/;"	m	struct:skip_list_t
node_t	skip.h	/^struct node_t {$/;"	s
ops	sim.h	/^	int ops;$/;"	m	struct:_ret_t
print_result	sim.h	/^void print_result(int ops)$/;"	f
prob_tbl	skip.h	/^int prob_tbl [MAX_LEVEL];$/;"	v
pskip_find_level	opskip.c	/^int pskip_find_level (long key, struct skip_list_t* sl, $/;"	f
put_cnt	sim.h	/^atomic_long put_cnt = 0;$/;"	v
put_count	vcskip.c	/^int put_count=0;$/;"	v
remained_vchain_num	vcskip.c	/^const int remained_vchain_num = 1;$/;"	v
remove_thread	vcskip.c	/^pthread_t remove_thread;$/;"	v
rusage_create	rusage.c	/^ EntitySet rusage_create(pid_t pid) { $/;"	f
rusage_destroy	rusage.c	/^void rusage_destroy(EntitySet es) {	$/;"	f
rusage_getstr	rusage.c	/^char* rusage_getstr(EntitySet* es, char* key, char* def) { $/;"	f
size	rusage.h	/^	size_t size;$/;"	m	struct:__anon2
skip_cnt	sim.h	/^atomic_int skip_cnt=0;$/;"	v
skip_cnt	skip.h	/^	unsigned long skip_cnt;$/;"	m	struct:skip_iter
skip_iter	skip.h	/^struct skip_iter{$/;"	s
skip_list_destroy	cskip.c	/^void skip_list_destroy(struct skip_list_t* sl) {$/;"	f
skip_list_destroy	opskip.c	/^void skip_list_destroy(struct skip_list_t* sl) {$/;"	f
skip_list_destroy	skip.c	/^void skip_list_destroy(struct skip_list_t* sl) {$/;"	f
skip_list_destroy	vcskip.c	/^void skip_list_destroy(struct skip_list_t* sl) {$/;"	f
skip_list_get	cskip.c	/^long skip_list_get (long key, struct skip_list_t* sl) {$/;"	f
skip_list_get	opskip.c	/^long skip_list_get (long key, struct skip_list_t* sl) {$/;"	f
skip_list_get	skip.c	/^long skip_list_get (long key, struct skip_list_t* sl) {$/;"	f
skip_list_get	vcskip.c	/^long skip_list_get (long key, struct skip_list_t* sl) {$/;"	f
skip_list_init	cskip.c	/^int skip_list_init(struct skip_list_t** sl) {$/;"	f
skip_list_init	opskip.c	/^int skip_list_init(struct skip_list_t** sl) {$/;"	f
skip_list_init	skip.c	/^int skip_list_init(struct skip_list_t** sl) {$/;"	f
skip_list_init	vcskip.c	/^int skip_list_init(struct skip_list_t** sl) {$/;"	f
skip_list_iter_valid	cskip.c	/^int skip_list_iter_valid(struct skip_iter * sk_iter){$/;"	f
skip_list_iter_valid	skip.c	/^int skip_list_iter_valid(struct skip_iter * sk_iter){$/;"	f
skip_list_iter_valid	vcskip.c	/^int skip_list_iter_valid(struct skip_iter * sk_iter){$/;"	f
skip_list_next	cskip.c	/^int skip_list_next(struct skip_iter * sk_iter){$/;"	f
skip_list_next	skip.c	/^int skip_list_next(struct skip_iter * sk_iter){$/;"	f
skip_list_next	vcskip.c	/^int skip_list_next(struct skip_iter * sk_iter){$/;"	f
skip_list_optimization	vcskip.c	/^void skip_list_optimization(struct skip_list_t* sl) {$/;"	f
skip_list_print_all	cskip.c	/^void skip_list_print_all (struct skip_list_t* sl){$/;"	f
skip_list_print_all	opskip.c	/^void skip_list_print_all (struct skip_list_t* sl){$/;"	f
skip_list_print_all	skip.c	/^void skip_list_print_all (struct skip_list_t* sl){$/;"	f
skip_list_print_all	vcskip.c	/^void skip_list_print_all (struct skip_list_t* sl){$/;"	f
skip_list_put	cskip.c	/^int skip_list_put (long key, long data, struct skip_list_t* sl) {$/;"	f
skip_list_put	opskip.c	/^int skip_list_put (long key, long data, struct skip_list_t* sl) {$/;"	f
skip_list_put	skip.c	/^int skip_list_put (long key, long data, struct skip_list_t* sl) {$/;"	f
skip_list_put	vcskip.c	/^int skip_list_put (long key, long data, struct skip_list_t* sl) {$/;"	f
skip_list_range_query	cskip.c	/^int skip_list_range_query(long key, long next_count, struct skip_list_t* sl)$/;"	f
skip_list_range_query	skip.c	/^int skip_list_range_query(long key, long next_count, struct skip_list_t* sl)$/;"	f
skip_list_range_query	vcskip.c	/^int skip_list_range_query(long key, long next_count, struct skip_list_t* sl)$/;"	f
skip_list_seek	cskip.c	/^struct skip_iter* skip_list_seek(long key, struct skip_iter * temp_iter, struct skip_list_t * sl){$/;"	f
skip_list_seek	skip.c	/^struct skip_iter* skip_list_seek(long key, struct skip_iter * temp_iter, struct skip_list_t* sl){$/;"	f
skip_list_seek	vcskip.c	/^struct skip_iter* skip_list_seek(long key, struct skip_iter* temp_iter ,struct skip_list_t* sl){$/;"	f
skip_list_t	skip.h	/^struct skip_list_t {$/;"	s
sl	sim.h	/^struct skip_list_t* sl;$/;"	v	typeref:struct:skip_list_t
strstran	rusage.c	/^static char* strstran(char* s) { $/;"	f	file:
t_end	sim.h	/^struct timeval t_end;$/;"	v	typeref:struct:timeval
t_stamp	skip.h	/^	unsigned long t_stamp;$/;"	m	struct:skip_iter
t_stamp	skip.h	/^	unsigned long t_stamp;$/;"	m	struct:vcnode_t
t_start	sim.h	/^struct timeval t_start;$/;"	v	typeref:struct:timeval
threads	sim.h	/^pthread_t threads[MAX_THREAD_NUM];$/;"	v
usage	vcskip.c	/^EntitySet usage = rusage_create(0);$/;"	v
value	rusage.h	/^	char* value; $/;"	m	struct:__anon1
vchain	skip.h	/^	struct vcnode_t* vchain; $/;"	m	struct:node_t	typeref:struct:node_t::vcnode_t
vchain_num	skip.h	/^	long vchain_num;$/;"	m	struct:node_t
vcnode_t	skip.h	/^struct vcnode_t{$/;"	s
